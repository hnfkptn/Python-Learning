#Veri tiplerini dönüştürmek
"""askerlikDurum = True
print ('askerlik durumu = ', askerlikDurum)
askerlikDurumInt = int(askerlikDurum) #bu kod integer veri tipine dönüşümü sağlar
print ('askerlik durumu = ', askerlikDurumInt)
askerlikDurumStr = str(askerlikDurum) #bu kod string veri tipine dönüşümü sağlar
print ('askerlik durumu = ', askerlikDurumStr)"""

#ARİTMETİK OPERATÖRLER:
'''sayi1, sayi2= 20, 5
print('iki sayının toplamı= ', sayi1 + sayi2)
print('iki sayının çıkarılması= ', sayi1 - sayi2)
print('iki sayının çarpımı= ', sayi1 * sayi2)
print(5*'yazma')
print('iki sayının bölümü= ', sayi1 / sayi2) #sonuç tam sayı değeri olsa da float veri tipindedir
print('bir sayının üssünü alma=', sayi1 ** sayi2) #bir sayının karesini bulmak için üssü 1/x şeklinde yazabiliriz.
print('iki sayının bölümümünün tam değeri= ', sayi1 // sayi2) #sonuç sadece tam sayı değer vereceğinden sonuç float değil integer veri tipi türündendir.
print('bir sayının modunu alma= ', sayi1 % sayi2)'''
#İLİŞKİSEL OPERATÖRLER 
'''(boolean türünden değer döndürürler)
== operatörü eşit mi işlemini sorgular.
!= operatörü eşit değil mi, farklı mı işlemini sorgular. eşitse false değilse true değerini döndürür.
> operatörü büyük mü işlemini sorar
< operatörü küçük mü işlemini sorar
karakter dizileri alfabetik olarak sıralandığında sonra gelen ifade daha büyük olarak değerlendirilir.
>= operatörü büyük veya eşit mi işlemidir.
<= opereatörü küçük veya eşit mi işlemine dek düşer.
is operatörü değerler eşit mi işlemini sorar. örn: 'Elif' is 'elif' sonuç: false
is not operatörü  değerler farklı mı işlemini sorar.
is ile ==, is not ile != aynı işleri görür. ek olarak is ifadeleri aynı zamanda her iki değerin aynı nesneyi referans gösterip göstermediğini kontrol eder.
in operatörü içeriyor mu işlemini sorgular.
not in içermiyor mu işlemini sorgular.
in ifadeleri bir karakter dizisinin başka bir karakter dizisi içinde yer alıp almadığını sorgular.
print ('z' > 'a')
print ('a' < 'z')
sayi1 = 5
print (sayi1 is 5)
print (sayi1 is not 5)
print ('bil' in 'bilişim')
print ('bil' not in 'bilişim')'''
#ATAMA OPERATÖRLERİ
'''Değişkene değer atamak için kullanılırlar. Değişkeni başka bir değerle işleme alarak sonucun yine aynı değişkene atanmasını sağlarlar.
= temel olarak atama işlemi yapmak için kullanılır
+= arttırarak atama yapar
-= eksilterek atama yapar
*= çarparak atama yapar
/=bölerek atama yapar
**= üssünü alarak atama yapar
//= tam sayı bölümü yaparak atama yapar
%= mod alarak atama yapar
sayi1 = 5
sayi1 += 3
print(sayi1)
metin1 = 'hello'
metin1 += 'world'
print(metin1)
sayi1 = 5
sayi1 -= 3
print(sayi1)
sayi1 = 5
sayi1 *= 3
print(sayi1)
sayi1 = 5
sayi1 /= 3
print(sayi1)
sayi1 = 5
sayi1 **= 3
print(sayi1)
sayi1 = 5
sayi1 //= 3
print(sayi1)
sayi1 = 5
sayi1 %= 3
print(sayi1)'''
#MANTIKSAL OPERATÖRLER
'''or= veya anlamındadır.
and= ve anlamındadır.
not= değil anlamındadır.
ogrenciDersPuani = 50
print(not(ogrenciDersPuani<45))'''
